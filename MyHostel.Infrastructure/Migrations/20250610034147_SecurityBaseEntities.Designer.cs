// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyHostel.Infrastructure.Persistence;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MyHostel.Infrastructure.Migrations
{
    [DbContext(typeof(HostelDbContext))]
    [Migration("20250610034147_SecurityBaseEntities")]
    partial class SecurityBaseEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MyHostel.Domain.Entities.Habitacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Capacidad")
                        .HasColumnType("integer");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("PrecioPorNoche")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Habitaciones", (string)null);
                });

            modelBuilder.Entity("MyHostel.Domain.Entities.Security.MenuItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreadoPorId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("EliminadoPorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Icono")
                        .HasColumnType("text");

                    b.Property<Guid?>("ModificadoPorId")
                        .HasColumnType("uuid");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("MyHostel.Domain.Entities.Security.Permiso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("CreadoPorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("EliminadoPorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModificadoPorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("MyHostel.Domain.Entities.Security.Rol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreadoPorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("EliminadoPorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModificadoPorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("MyHostel.Domain.Entities.Security.RolMenuItem", b =>
                {
                    b.Property<Guid>("RolId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MenuItemId")
                        .HasColumnType("uuid");

                    b.HasKey("RolId", "MenuItemId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("RolMenuItems");
                });

            modelBuilder.Entity("MyHostel.Domain.Entities.Security.RolPermiso", b =>
                {
                    b.Property<Guid>("RolId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PermisoId")
                        .HasColumnType("uuid");

                    b.HasKey("RolId", "PermisoId");

                    b.HasIndex("PermisoId");

                    b.ToTable("RolPermisos");
                });

            modelBuilder.Entity("MyHostel.Domain.Entities.Security.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("CreadoPorId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("EliminadoPorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModificadoPorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MyHostel.Domain.Entities.Security.UsuarioRol", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RolId")
                        .HasColumnType("uuid");

                    b.HasKey("UsuarioId", "RolId");

                    b.HasIndex("RolId");

                    b.ToTable("UsuarioRoles");
                });

            modelBuilder.Entity("MyHostel.Domain.Entities.Security.MenuItem", b =>
                {
                    b.HasOne("MyHostel.Domain.Entities.Security.MenuItem", "Parent")
                        .WithMany("SubItems")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("MyHostel.Domain.Entities.Security.RolMenuItem", b =>
                {
                    b.HasOne("MyHostel.Domain.Entities.Security.MenuItem", "MenuItem")
                        .WithMany("Roles")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyHostel.Domain.Entities.Security.Rol", "Rol")
                        .WithMany("Menus")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("MyHostel.Domain.Entities.Security.RolPermiso", b =>
                {
                    b.HasOne("MyHostel.Domain.Entities.Security.Permiso", "Permiso")
                        .WithMany("Roles")
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyHostel.Domain.Entities.Security.Rol", "Rol")
                        .WithMany("Permisos")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("MyHostel.Domain.Entities.Security.UsuarioRol", b =>
                {
                    b.HasOne("MyHostel.Domain.Entities.Security.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyHostel.Domain.Entities.Security.Usuario", "Usuario")
                        .WithMany("Roles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MyHostel.Domain.Entities.Security.MenuItem", b =>
                {
                    b.Navigation("Roles");

                    b.Navigation("SubItems");
                });

            modelBuilder.Entity("MyHostel.Domain.Entities.Security.Permiso", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("MyHostel.Domain.Entities.Security.Rol", b =>
                {
                    b.Navigation("Menus");

                    b.Navigation("Permisos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("MyHostel.Domain.Entities.Security.Usuario", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
